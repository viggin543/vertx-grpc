/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package vertx.grpc

import io.grpc.examples.echo.EchoMessage
import io.grpc.examples.echo.EchoServiceGrpc
import io.vertx.core.AsyncResult
import io.vertx.core.Future
import io.vertx.core.Promise
import io.vertx.core.Vertx
import io.vertx.example.grpc.EmptyPingPongServiceGrpc
import io.vertx.example.grpc.EmptyProtos
import io.vertx.grpc.VertxServerBuilder
import io.vertx.kotlin.coroutines.CoroutineVerticle

class App : CoroutineVerticle() {
    override suspend fun start() {
        VertxServerBuilder
                .forPort(vertx, 8080)
                .addService(object : EmptyPingPongServiceGrpc.EmptyPingPongServiceVertxImplBase() {
                    override fun emptyCall(request: EmptyProtos.Empty, response: Future<EmptyProtos.Empty>) {
                        response.complete(
                                EmptyProtos.Empty.newBuilder().build()
                        )
                    }
                }).build().start { ar: AsyncResult<Void> ->
            if (ar.failed()) {
                ar.cause().printStackTrace()
            } else {
                println("rpc evrtx service is up and running !!")
            }
        }
    }
}

fun main() {
    val app = App()
    val vertx = Vertx.vertx()
    vertx.deployVerticle(app)
    println("so it beggins")
}
